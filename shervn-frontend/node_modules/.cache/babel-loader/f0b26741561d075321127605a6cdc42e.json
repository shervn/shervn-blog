{"ast":null,"code":"var _jsxFileName = \"/Users/shervindehghani/Documents/Work/full-blog/shervn.github.io/src/Components/blogComponent.js\";\nimport React, { Component } from 'react';\nimport { Container, Header, Divider, Button } from 'semantic-ui-react';\nimport HTTPService from '../httpService';\nconst httpService = new HTTPService();\nexport default class Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      currentPage: 0,\n      nextPageURL: ''\n    };\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n  }\n\n  componentDidMount() {\n    httpService.getPosts('txt_posts').then(function (result) {\n      this.setState({\n        posts: result.data,\n        nextPageURL: result.nextlink,\n        prevPageURL: result.prevlink,\n        currentPage: result.currentPage\n      });\n    }.bind(this));\n  }\n\n  nextPage() {\n    httpService.getPostsByURL(this.state.nextPageURL).then(result => {\n      this.setState({\n        posts: result.data,\n        prevPageURL: result.prevlink,\n        nextPageURL: result.nextlink\n      });\n    });\n  }\n\n  prevPage() {\n    httpService.getPostsByURL(this.state.prevPageURL).then(result => {\n      this.setState({\n        posts: result.data,\n        prevPageURL: result.prevlink,\n        nextPageURL: result.nextlink\n      });\n    });\n  }\n\n  render() {\n    const posts = this.state.posts;\n    const t = posts.map(element => React.createElement(\"li\", {\n      key: element.pk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Container, {\n      text: true,\n      className: element.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      content: element.title,\n      className: element.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), element.body.split('\\n').map(x => React.createElement(\"p\", {\n      className: element.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, x)), React.createElement(Header, {\n      as: \"h3\",\n      subheader: '- ' + element.date,\n      className: element.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n    return React.createElement(Container, {\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"blogList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, t), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: \"chevron left\",\n      onClick: this.prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: \"chevron right\",\n      onClick: this.nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/shervindehghani/Documents/Work/full-blog/shervn.github.io/src/Components/blogComponent.js"],"names":["React","Component","Container","Header","Divider","Button","HTTPService","httpService","Blog","constructor","props","state","posts","currentPage","nextPageURL","nextPage","bind","prevPage","componentDidMount","getPosts","then","result","setState","data","nextlink","prevPageURL","prevlink","getPostsByURL","render","t","map","element","pk","className","title","body","split","x","date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Header, Divider, Button } from 'semantic-ui-react'\n\nimport  HTTPService  from  '../httpService';\nconst  httpService  =  new  HTTPService();\n\nexport default class Blog extends Component {\n\n  constructor(props){\n    super(props);\n    this.state  = {\n        posts: [],\n        currentPage: 0,\n        nextPageURL:  ''\n    };\n\n    this.nextPage  =  this.nextPage.bind(this);\n    this.prevPage  =  this.prevPage.bind(this);\n  };\n  \n  componentDidMount() {\n    httpService.getPosts('txt_posts').then(function (result) {\n        this.setState({ posts: result.data,\n                        nextPageURL:  result.nextlink,\n                        prevPageURL:  result.prevlink,\n                        currentPage: result.currentPage})\n    }.bind(this));\n  }\n\n  nextPage(){\n    httpService.getPostsByURL(this.state.nextPageURL).then((result) => {\n        this.setState({ posts:  result.data, prevPageURL: result.prevlink, nextPageURL:  result.nextlink})\n    });\n  }\n  \n  prevPage(){\n      httpService.getPostsByURL(this.state.prevPageURL).then((result) => {\n        this.setState({ posts:  result.data, prevPageURL: result.prevlink, nextPageURL:  result.nextlink})\n    });\n  }\n\n  render() {\n    const posts = this.state.posts;\n    const t = posts.map(element =>\n      <li key={element.pk}>\n        <br />\n        <Container text className={element.className}>\n          <Header as='h3' content={element.title} className={element.className} />\n          {element.body.split('\\n').map(x => <p className={element.className}>{x}</p>)}\n          <Header as='h3' subheader={'- ' + element.date} className={element.className} />\n          <Divider />\n\n        </Container>\n      </li>\n    );\n\n    return (\n      <Container text>\n        <ul className=\"blogList\">\n          {t}\n        </ul>\n        <div className=\"buttons\">\n          <Button icon='chevron left' onClick=  {  this.prevPage  } />\n          <Button icon='chevron right' onClick=  {  this.nextPage  }/>\n        </div>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}