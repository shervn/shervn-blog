{"ast":null,"code":"var _jsxFileName = \"/Users/shervindehghani/Documents/Work/shervn.github.io/src/Components/academiaComponent.js\";\nimport React, { Component } from 'react';\nimport { Container, Header, Divider } from 'semantic-ui-react';\nimport HTTPService from '../httpService';\nconst httpService = new HTTPService();\nexport default class Academia extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      nextPageURL: ''\n    };\n    this.nextPage = this.nextPage.bind(this);\n  }\n\n  componentDidMount() {\n    httpService.getPosts('ac_posts').then(function (result) {\n      this.setState({\n        posts: result.data,\n        nextPageURL: result.nextlink,\n        prevPageURL: result.prevlink\n      });\n    }.bind(this));\n  }\n\n  nextPage() {\n    httpService.getPostsByURL(this.state.nextPageURL).then(result => {\n      this.setState({\n        posts: result.data,\n        prevPageURL: this.state.nextPageURL,\n        nextPageURL: result.nextlink\n      });\n    });\n  }\n\n  prevPage() {\n    httpService.getPostsByURL(this.state.prevPageURL).then(result => {\n      this.setState({\n        posts: result.data,\n        nextPageURL: this.state.prevPageURL,\n        prevPageURL: result.prevlink\n      });\n    });\n  }\n\n  render() {\n    const t = this.state.posts.map(element => React.createElement(\"li\", {\n      key: element.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, element.title), React.createElement(Header, {\n      as: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, element.organization), React.createElement(\"p\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, element.description)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n    return React.createElement(Container, {\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"nicep post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"I'm currently studying my Masters in Informatics and will start writing my thesis soon. You can find my CV \", React.createElement(\"a\", {\n      className: \"cv\",\n      href: \"https://www.dropbox.com/s/n93tdnvyw2ban9u/CV.pdf?dl=0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"here\"), \".\"), React.createElement(\"p\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Here is a list of some of the projects that I've been working on:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, t));\n  }\n\n}","map":{"version":3,"sources":["/Users/shervindehghani/Documents/Work/shervn.github.io/src/Components/academiaComponent.js"],"names":["React","Component","Container","Header","Divider","HTTPService","httpService","Academia","constructor","props","state","posts","nextPageURL","nextPage","bind","componentDidMount","getPosts","then","result","setState","data","nextlink","prevPageURL","prevlink","getPostsByURL","prevPage","render","t","map","element","title","organization","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,QAA2C,mBAA3C;AAEA,OAAQC,WAAR,MAA2B,gBAA3B;AACA,MAAOC,WAAW,GAAK,IAAKD,WAAL,EAAvB;AAEA,eAAe,MAAME,QAAN,SAAuBN,SAAvB,CAAiC;AAE9CO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,WAAW,EAAG;AAFJ,KAAd;AAIA,SAAKC,QAAL,GAAkB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAlB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,WAAW,CAACU,QAAZ,CAAqB,UAArB,EAAiCC,IAAjC,CAAsC,UAAUC,MAAV,EAAkB;AACpD,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEO,MAAM,CAACE,IAAhB;AACER,QAAAA,WAAW,EAAGM,MAAM,CAACG,QADvB;AAEEC,QAAAA,WAAW,EAAGJ,MAAM,CAACK;AAFvB,OAAd;AAGO,KAJ2B,CAI1BT,IAJ0B,CAIrB,IAJqB,CAAtC;AAKW;;AAEbD,EAAAA,QAAQ,GAAE;AACVP,IAAAA,WAAW,CAACkB,aAAZ,CAA0B,KAAKd,KAAL,CAAWE,WAArC,EAAkDK,IAAlD,CAAwDC,MAAD,IAAY;AACnE,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAGO,MAAM,CAACE,IAAjB;AAAuBE,QAAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWE,WAA/C;AAA4DA,QAAAA,WAAW,EAAGM,MAAM,CAACG;AAAjF,OAAd;AACC,KAFD;AAGC;;AAEDI,EAAAA,QAAQ,GAAE;AACVnB,IAAAA,WAAW,CAACkB,aAAZ,CAA0B,KAAKd,KAAL,CAAWY,WAArC,EAAkDL,IAAlD,CAAwDC,MAAD,IAAY;AACnE,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAGO,MAAM,CAACE,IAAjB;AAAuBR,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWY,WAA/C;AAA4DA,QAAAA,WAAW,EAAGJ,MAAM,CAACK;AAAjF,OAAd;AACC,KAFD;AAGC;;AAEDG,EAAAA,MAAM,GAAG;AAEP,UAAMC,CAAC,GAAG,KAAKjB,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqBC,OAAO,IACpC;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,OAAO,CAACC,KAAzB,CADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,OAAO,CAACE,YAAzB,CAFF,EAGE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,OAAO,CAACG,WADX,CAHF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADQ,CAAV;AAaA,WACE,oBAAC,SAAD;AAAW,MAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHAC6G;AAAG,MAAA,SAAS,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC,uDAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7G,MAFF,EAKE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,CADH,CATF,CADF;AAeD;;AA7D6C","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Header, Divider } from 'semantic-ui-react'\n\nimport  HTTPService  from  '../httpService';\nconst  httpService  =  new  HTTPService();\n\nexport default class Academia extends Component {\n\n  constructor(props){\n    super(props);\n    this.state  = {\n        posts: [],\n        nextPageURL:  ''\n    };\n    this.nextPage  =  this.nextPage.bind(this);\n  };\n  \n  componentDidMount() {\n    httpService.getPosts('ac_posts').then(function (result) {\n        this.setState({ posts: result.data,\n                        nextPageURL:  result.nextlink,\n                        prevPageURL:  result.prevlink})\n              }.bind(this));\n              }\n\n  nextPage(){\n  httpService.getPostsByURL(this.state.nextPageURL).then((result) => {\n  this.setState({ posts:  result.data, prevPageURL: this.state.nextPageURL, nextPageURL:  result.nextlink})\n  });\n  }\n\n  prevPage(){\n  httpService.getPostsByURL(this.state.prevPageURL).then((result) => {\n  this.setState({ posts:  result.data, nextPageURL: this.state.prevPageURL, prevPageURL:  result.prevlink})\n  });\n  }\n\n  render() {\n\n    const t = this.state.posts.map(element =>\n      <li key={element.title}>\n        <Container>\n          <Header as='h3'>{element.title}</Header>\n          <Header as='h6'>{element.organization}</Header>\n          <p className=\"post\">\n            {element.description}\n          </p>\n        </Container>\n        <br />\n        <Divider />\n      </li>\n    );\n    return (\n      <Container text>\n        <br />\n        <p className='nicep post'>\n          I'm currently studying my Masters in Informatics and will start writing my thesis soon. You can find my CV <a className=\"cv\" href=\"https://www.dropbox.com/s/n93tdnvyw2ban9u/CV.pdf?dl=0\">here</a>.\n    </p>\n        <p className=\"post\">\n          Here is a list of some of the projects that I've been working on:\n      </p>\n        <br />\n        <ul>\n          {t}\n        </ul>\n      </Container>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}