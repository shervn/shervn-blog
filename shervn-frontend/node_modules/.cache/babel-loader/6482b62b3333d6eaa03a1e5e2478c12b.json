{"ast":null,"code":"var _jsxFileName = \"/Users/shervindehghani/Documents/Work/shervn.github.io/src/Components/musicComponent.js\";\nimport React from 'react';\nimport { Divider, Container, Header } from 'semantic-ui-react';\nimport PostService from './postService';\nconst postService = new PostService();\nexport default class Music extends Comment {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    postService.getPostss().then(function (result) {\n      console.log(result);\n      this.setState({\n        posts: result.data\n      });\n    });\n  }\n\n  handleDelete(e, pk) {\n    postService.deletePosts({\n      pk: pk\n    }).then(() => {\n      var newArr = this.state.posts.filter(function (obj) {\n        return obj.pk !== pk;\n      });\n      this.setState({\n        posts: newArr\n      });\n    });\n  }\n\n  nextPage() {\n    console.log(this.state.nextPageURL);\n    postService.getPostssByURL(this.state.nextPageURL).then(result => {\n      this.setState({\n        posts: result.data,\n        nextPageURL: result.nextlink\n      });\n    });\n  }\n\n  render() {\n    const soundclouds = this.state.posts;\n    var t = soundclouds.map(element => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Container, {\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, element.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, element.text), element.farsitext ? React.createElement(\"p\", {\n      className: \"farsiPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, element.farsitext) : null, React.createElement(\"iframe\", {\n      title: element.title,\n      width: \"100%\",\n      height: element.playlist === true ? 350 : 150,\n      scrolling: \"no\",\n      frameborder: \"no\",\n      allow: \"autoplay\",\n      src: element.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n    return React.createElement(Container, {\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"nicep post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Music, and playing music is my [main] hobby. I play different music instruments and always like to try new ones. Piano and Setar (an Iranian music Instrument) are the ones I play for a longer time, but lately I've been practicing Trumpet too.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"I record time to time the stuff I play or the sounds I hear. Based on the recordings, I'm gathering two collections which are:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Improvisation for Home: a collection of my improvisations.\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Through the Cities: a collection of street music of different cities that I have visited.\"))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"They probably lack many quality standards but I still like to continue recording, at least for a while.\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), t);\n  }\n\n}","map":{"version":3,"sources":["/Users/shervindehghani/Documents/Work/shervn.github.io/src/Components/musicComponent.js"],"names":["React","Divider","Container","Header","PostService","postService","Music","Comment","constructor","props","state","posts","componentDidMount","getPostss","then","result","console","log","setState","data","handleDelete","e","pk","deletePosts","newArr","filter","obj","nextPage","nextPageURL","getPostssByURL","nextlink","render","soundclouds","t","map","element","title","text","farsitext","playlist","src"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Divider, Container, Header } from 'semantic-ui-react'\n\nimport  PostService  from  './postService';\nconst  postService  =  new  PostService();\n\n\nexport default class Music extends Comment {\n\nconstructor(props){\n  super(props);\n  this.state  = {\n      posts: [],\n  };\n}\n\ncomponentDidMount() {\n  postService.getPostss().then(function (result) {\n      console.log(result);\n      this.setState({ posts: result.data})\n  });\n}\nhandleDelete(e, pk){\n  postService.deletePosts({pk :  pk}).then(()=>{\n      var  newArr  =  this.state.posts.filter(function(obj) {\n          return  obj.pk  !==  pk;\n      });\n\n      this.setState({posts:  newArr})\n  });\n}\n\nnextPage(){\n  console.log(this.state.nextPageURL);        \n  postService.getPostssByURL(this.state.nextPageURL).then((result) => {\n      this.setState({ posts:  result.data, nextPageURL:  result.nextlink})\n  });\n}\n\nrender(){\n\n  const soundclouds = this.state.posts;\n\n  var t = soundclouds.map(element =>\n    <div>\n      <Container text>\n        <Header as='h3'>{element.title}</Header>\n        <p>{element.text}</p>\n        {element.farsitext ? <p className=\"farsiPost\">{element.farsitext}</p> : null}\n        <iframe title={element.title} width=\"100%\" height={element.playlist === true ? 350 : 150} scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src={element.src}></iframe>\n      </Container>\n      <Divider />\n    </div>\n  );\n\nreturn(\n  <Container text>\n    <br />\n    <p className='nicep post'>Music, and playing music is my [main] hobby. I play different music instruments and always like to try new ones. Piano and Setar (an Iranian music Instrument) are the ones I play for a longer time, but lately I've been practicing Trumpet too.</p>\n    <p>I record time to time the stuff I play or the sounds I hear. Based on the recordings, I'm gathering two collections which are:</p>\n    <ul>\n      <li><p>Improvisation for Home: a collection of my improvisations.</p></li>\n      <li><p>Through the Cities: a collection of street music of different cities that I have visited.</p></li>\n    </ul>\n    <p>They probably lack many quality standards but I still like to continue recording, at least for a while.</p>\n    <Divider />\n    {t}\n  </Container>)\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}